/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from '../../../../../app/shared/widgets/mega-menu/mega-menu-link.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/element_ref';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '@angular/router/src/directives/router_link';
import * as import12 from '@angular/router/src/router';
import * as import13 from '@angular/router/src/router_state';
import * as import14 from '@angular/common/src/location/location_strategy';
import * as import15 from '@angular/core/src/security';
var renderType_MegaMenuLinkComponent_Host:import0.RenderComponentType = (null as any);
class _View_MegaMenuLinkComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _MegaMenuLinkComponent_0_4:import3.MegaMenuLinkComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_MegaMenuLinkComponent_Host0,renderType_MegaMenuLinkComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('cv-menu-link',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_MegaMenuLinkComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._MegaMenuLinkComponent_0_4 = new import3.MegaMenuLinkComponent(new import8.ElementRef(this._el_0),this.renderer);
    this._appEl_0.initComponent(this._MegaMenuLinkComponent_0_4,[],compView_0);
    compView_0.create(this._MegaMenuLinkComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.MegaMenuLinkComponent) && (0 === requestNodeIndex))) { return this._MegaMenuLinkComponent_0_4; }
    return notFoundResult;
  }
}
function viewFactory_MegaMenuLinkComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_MegaMenuLinkComponent_Host === (null as any))) { (renderType_MegaMenuLinkComponent_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,[],{})); }
  return new _View_MegaMenuLinkComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const MegaMenuLinkComponentNgFactory:import10.ComponentFactory<import3.MegaMenuLinkComponent> = new import10.ComponentFactory<import3.MegaMenuLinkComponent>('cv-menu-link',viewFactory_MegaMenuLinkComponent_Host0,import3.MegaMenuLinkComponent);
const styles_MegaMenuLinkComponent:any[] = [];
var renderType_MegaMenuLinkComponent:import0.RenderComponentType = (null as any);
class _View_MegaMenuLinkComponent0 extends import1.AppView<import3.MegaMenuLinkComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _RouterLinkWithHref_3_3:import11.RouterLinkWithHref;
  _text_4:any;
  _text_5:any;
  _text_6:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_MegaMenuLinkComponent0,renderType_MegaMenuLinkComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'li',(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._el_3 = this.renderer.createElement(this._el_1,'a',(null as any));
    this._RouterLinkWithHref_3_3 = new import11.RouterLinkWithHref(this.parentInjector.get(import12.Router),this.parentInjector.get(import13.ActivatedRoute),this.parentInjector.get(import14.LocationStrategy));
    this._text_4 = this.renderer.createText(this._el_3,'',(null as any));
    this._text_5 = this.renderer.createText(this._el_1,'\n  ',(null as any));
    this._text_6 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_1,'mouseover',this.eventHandler(this._handle_mouseover_1_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_1,'mouseleave',this.eventHandler(this._handle_mouseleave_1_1.bind(this)));
    var disposable_2:Function = this.renderer.listen(this._el_3,'click',this.eventHandler(this._handle_click_3_0.bind(this)));
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
    this._expr_5 = import7.UNINITIALIZED;
    this._expr_6 = import7.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._text_6
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    ,[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.RouterLinkWithHref) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._RouterLinkWithHref_3_3; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_3:any = this.context.getRouterLink(this.context.categoryData.href)['qp'];
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this._RouterLinkWithHref_3_3.queryParams = currVal_3;
      if ((changes === (null as any))) { (changes = {}); }
      changes['queryParams'] = new import7.SimpleChange(this._expr_3,currVal_3);
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this.context.getRouterLink(this.context.categoryData.href)['rl'];
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this._RouterLinkWithHref_3_3.routerLink = currVal_4;
      if ((changes === (null as any))) { (changes = {}); }
      changes['routerLink'] = new import7.SimpleChange(this._expr_4,currVal_4);
      this._expr_4 = currVal_4;
    }
    if ((changes !== (null as any))) { this._RouterLinkWithHref_3_3.ngOnChanges(changes); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_5:any = this._RouterLinkWithHref_3_3.href;
    if (import4.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setElementProperty(this._el_3,'href',this.viewUtils.sanitizer.sanitize(import15.SecurityContext.URL,currVal_5));
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = import4.interpolate(1,'\n      ',this.context.categoryData.name,'\n    ');
    if (import4.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this.renderer.setText(this._text_4,currVal_6);
      this._expr_6 = currVal_6;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._RouterLinkWithHref_3_3.ngOnDestroy();
  }
  private _handle_mouseover_1_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.onMouseEnter()) !== false);
    return (true && pd_0);
  }
  private _handle_mouseleave_1_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.onMouseLeave()) !== false);
    return (true && pd_0);
  }
  private _handle_click_3_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._RouterLinkWithHref_3_3.onClick($event.button,$event.ctrlKey,$event.metaKey)) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_MegaMenuLinkComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.MegaMenuLinkComponent> {
  if ((renderType_MegaMenuLinkComponent === (null as any))) { (renderType_MegaMenuLinkComponent = viewUtils.createRenderComponentType('/home/craftsvilla/angular2-aot-webpack2-rollup/app/shared/widgets/mega-menu/mega-menu-link.component.ts class MegaMenuLinkComponent - inline template',0,import9.ViewEncapsulation.None,styles_MegaMenuLinkComponent,{})); }
  return new _View_MegaMenuLinkComponent0(viewUtils,parentInjector,declarationEl);
}