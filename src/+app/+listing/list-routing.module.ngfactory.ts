/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from './list-routing.module';
import * as import2 from '@angular/router/src/router_module';
import * as import3 from '@angular/core/src/di/injector';
import * as import4 from './listing.component.ngfactory';
import * as import5 from './listing.component';
import * as import6 from './filter-resolve.service';
import * as import7 from '@angular/router/src/router_config_loader';
class ListRoutingModuleInjector extends import0.NgModuleInjector<import1.ListRoutingModule> {
  _RouterModule_0:import2.RouterModule;
  _ListRoutingModule_1:import1.ListRoutingModule;
  __ROUTES_2:any[];
  constructor(parent:import3.Injector) {
    super(parent,[
      import4.ListingComponentNgFactory,
      import4.ListingComponentNgFactory,
      import4.ListingComponentNgFactory
    ]
    ,([] as any[]));
  }
  get _ROUTES_2():any[] {
      if ((this.__ROUTES_2 == (null as any))) { (this.__ROUTES_2 = [[
        {
          path: 'category',
          component: import5.ListingComponent,
          resolve: {filters: import6.FilterResolveService}
        }
        ,
        {
          path: 'premium',
          component: import5.ListingComponent,
          resolve: {filters: import6.FilterResolveService}
        }
        ,
        {
          path: 'category/:id',
          component: import5.ListingComponent,
          resolve: {filters: import6.FilterResolveService}
        }

      ]
    ]); }
    return this.__ROUTES_2;
  }
  createInternal():import1.ListRoutingModule {
    this._RouterModule_0 = new import2.RouterModule(this.parent.get(import2.ROUTER_FORROOT_GUARD,(null as any)));
    this._ListRoutingModule_1 = new import1.ListRoutingModule();
    return this._ListRoutingModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.RouterModule)) { return this._RouterModule_0; }
    if ((token === import1.ListRoutingModule)) { return this._ListRoutingModule_1; }
    if ((token === import7.ROUTES)) { return this._ROUTES_2; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const ListRoutingModuleNgFactory:import0.NgModuleFactory<import1.ListRoutingModule> = new import0.NgModuleFactory(ListRoutingModuleInjector,import1.ListRoutingModule);