/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from '../../../../../app/shared/widgets/mega-menu/mega-menu.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '../../../../../app/shared/services/http-client.service';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from './mega-menu.component.css.shim';
import * as import12 from '@angular/common/src/directives/ng_for';
import * as import13 from '@angular/common/src/directives/ng_if';
import * as import14 from '@angular/core/src/linker/template_ref';
import * as import15 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import16 from '../../../../../app/shared/widgets/mega-menu/mega-menu-link.component';
import * as import17 from './mega-menu-link.component.ngfactory';
import * as import18 from '@angular/core/src/linker/element_ref';
import * as import19 from '@angular/router/src/directives/router_link';
import * as import20 from '@angular/router/src/router';
import * as import21 from '@angular/router/src/router_state';
import * as import22 from '@angular/common/src/location/location_strategy';
import * as import23 from '@angular/core/src/security';
var renderType_MegaMenuComponent_Host:import0.RenderComponentType = (null as any);
class _View_MegaMenuComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _MegaMenuComponent_0_4:import3.MegaMenuComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_MegaMenuComponent_Host0,renderType_MegaMenuComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('cvi-mega-menu',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_MegaMenuComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._MegaMenuComponent_0_4 = new import3.MegaMenuComponent(this.parentInjector.get(import8.HttpClientService));
    this._appEl_0.initComponent(this._MegaMenuComponent_0_4,[],compView_0);
    compView_0.create(this._MegaMenuComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.MegaMenuComponent) && (0 === requestNodeIndex))) { return this._MegaMenuComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._MegaMenuComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_MegaMenuComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_MegaMenuComponent_Host === (null as any))) { (renderType_MegaMenuComponent_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,[],{})); }
  return new _View_MegaMenuComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const MegaMenuComponentNgFactory:import10.ComponentFactory<import3.MegaMenuComponent> = new import10.ComponentFactory<import3.MegaMenuComponent>('cvi-mega-menu',viewFactory_MegaMenuComponent_Host0,import3.MegaMenuComponent);
const styles_MegaMenuComponent:any[] = [import11.styles];
var renderType_MegaMenuComponent:import0.RenderComponentType = (null as any);
class _View_MegaMenuComponent0 extends import1.AppView<import3.MegaMenuComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _text_10:any;
  _text_11:any;
  _anchor_12:any;
  /*private*/ _appEl_12:import2.AppElement;
  _TemplateRef_12_5:any;
  _NgFor_12_6:import12.NgFor;
  _text_13:any;
  _anchor_14:any;
  /*private*/ _appEl_14:import2.AppElement;
  _TemplateRef_14_5:any;
  _NgIf_14_6:import13.NgIf;
  _text_15:any;
  _text_16:any;
  _text_17:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_MegaMenuComponent0,renderType_MegaMenuComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','menu pull-left bg-white hide-sm');
    this.renderer.setElementAttribute(this._el_0,'id','mega-menu');
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_2 = this.renderer.createElement(this._el_0,'ul',(null as any));
    this.renderer.setElementAttribute(this._el_2,'class','list-unstyled menu-list');
    this._text_3 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._el_4 = this.renderer.createElement(this._el_2,'li',(null as any));
    this.renderer.setElementAttribute(this._el_4,'class','header');
    this._text_5 = this.renderer.createText(this._el_4,'\n      ',(null as any));
    this._el_6 = this.renderer.createElement(this._el_4,'span',(null as any));
    this.renderer.setElementAttribute(this._el_6,'class','glyphicon glyphicon-th-list');
    this._text_7 = this.renderer.createText(this._el_4,'\n      ',(null as any));
    this._el_8 = this.renderer.createElement(this._el_4,'strong',(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'SHOP BY CATEGORY',(null as any));
    this._text_10 = this.renderer.createText(this._el_4,'\n    ',(null as any));
    this._text_11 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._anchor_12 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._appEl_12 = new import2.AppElement(12,2,this,this._anchor_12);
    this._TemplateRef_12_5 = new import14.TemplateRef_(this._appEl_12,viewFactory_MegaMenuComponent1);
    this._NgFor_12_6 = new import12.NgFor(this._appEl_12.vcRef,this._TemplateRef_12_5,this.parentInjector.get(import15.IterableDiffers),this.ref);
    this._text_13 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._anchor_14 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._appEl_14 = new import2.AppElement(14,2,this,this._anchor_14);
    this._TemplateRef_14_5 = new import14.TemplateRef_(this._appEl_14,viewFactory_MegaMenuComponent2);
    this._NgIf_14_6 = new import13.NgIf(this._appEl_14.vcRef,this._TemplateRef_14_5);
    this._text_15 = this.renderer.createText(this._el_2,'\n  ',(null as any));
    this._text_16 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_17 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_2,'mouseleave',this.eventHandler(this._handle_mouseleave_2_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_2,'selectedCategory',this.eventHandler(this._handle_selectedCategory_2_1.bind(this)));
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
    this.init([],[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._text_10,
      this._text_11,
      this._anchor_12,
      this._text_13,
      this._anchor_14,
      this._text_15,
      this._text_16,
      this._text_17
    ]
    ,[
      disposable_0,
      disposable_1
    ]
    ,[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.TemplateRef) && (12 === requestNodeIndex))) { return this._TemplateRef_12_5; }
    if (((token === import12.NgFor) && (12 === requestNodeIndex))) { return this._NgFor_12_6; }
    if (((token === import14.TemplateRef) && (14 === requestNodeIndex))) { return this._TemplateRef_14_5; }
    if (((token === import13.NgIf) && (14 === requestNodeIndex))) { return this._NgIf_14_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_3:any = this.context.menuCategoriesData;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this._NgFor_12_6.ngForOf = currVal_3;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForOf'] = new import7.SimpleChange(this._expr_3,currVal_3);
      this._expr_3 = currVal_3;
    }
    if ((changes !== (null as any))) { this._NgFor_12_6.ngOnChanges(changes); }
    if (!throwOnChange) { this._NgFor_12_6.ngDoCheck(); }
    const currVal_4:any = (this.context.activeCategoryData && (this.context.activeCategoryData.data.length > 0));
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this._NgIf_14_6.ngIf = currVal_4;
      this._expr_4 = currVal_4;
    }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this.context.isNonHomePage;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementClass(this._el_0,'overlay-menu',currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_mouseleave_2_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.onMouseLeave()) !== false);
    return (true && pd_0);
  }
  private _handle_selectedCategory_2_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.getSelectedCategory($event)) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_MegaMenuComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.MegaMenuComponent> {
  if ((renderType_MegaMenuComponent === (null as any))) { (renderType_MegaMenuComponent = viewUtils.createRenderComponentType('/home/craftsvilla/angular2-aot-webpack2-rollup/app/shared/widgets/mega-menu/mega-menu.component.html',0,import9.ViewEncapsulation.Emulated,styles_MegaMenuComponent,{})); }
  return new _View_MegaMenuComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_MegaMenuComponent1 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _MegaMenuLinkComponent_0_4:import16.MegaMenuLinkComponent;
  _text_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_MegaMenuComponent1,renderType_MegaMenuComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'cv-menu-link',(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = import17.viewFactory_MegaMenuLinkComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._MegaMenuLinkComponent_0_4 = new import16.MegaMenuLinkComponent(new import18.ElementRef(this._el_0),this.renderer);
    this._appEl_0.initComponent(this._MegaMenuLinkComponent_0_4,[],compView_0);
    this._text_1 = this.renderer.createText((null as any),'\n    ',(null as any));
    compView_0.create(this._MegaMenuLinkComponent_0_4,[],(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'selectedCategory',this.eventHandler(this._handle_selectedCategory_0_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_0,'previousElement',this.eventHandler(this._handle_previousElement_0_1.bind(this)));
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
    const subscription_0:any = this._MegaMenuLinkComponent_0_4.selectedCategory.subscribe(this.eventHandler(this._handle_selectedCategory_0_0.bind(this)));
    const subscription_1:any = this._MegaMenuLinkComponent_0_4.previousElement.subscribe(this.eventHandler(this._handle_previousElement_0_1.bind(this)));
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,[
      disposable_0,
      disposable_1
    ]
    ,[
      subscription_0,
      subscription_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.MegaMenuLinkComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._MegaMenuLinkComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_2:any = this.context.$implicit;
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this._MegaMenuLinkComponent_0_4.categoryData = currVal_2;
      if ((changes === (null as any))) { (changes = {}); }
      changes['categoryData'] = new import7.SimpleChange(this._expr_2,currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = this.parent.context.previousElement;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this._MegaMenuLinkComponent_0_4.prevElem = currVal_3;
      if ((changes === (null as any))) { (changes = {}); }
      changes['prevElem'] = new import7.SimpleChange(this._expr_3,currVal_3);
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this.parent.context.activeCategoryData;
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this._MegaMenuLinkComponent_0_4.categorySelected = currVal_4;
      if ((changes === (null as any))) { (changes = {}); }
      changes['categorySelected'] = new import7.SimpleChange(this._expr_4,currVal_4);
      this._expr_4 = currVal_4;
    }
    if ((changes !== (null as any))) { this._MegaMenuLinkComponent_0_4.ngOnChanges(changes); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_selectedCategory_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.parent.context.getSelectedCategory($event)) !== false);
    return (true && pd_0);
  }
  private _handle_previousElement_0_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.parent.context.setPreviousElement($event)) !== false);
    return (true && pd_0);
  }
}
function viewFactory_MegaMenuComponent1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_MegaMenuComponent1(viewUtils,parentInjector,declarationEl);
}
class _View_MegaMenuComponent2 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _appEl_2:import2.AppElement;
  _TemplateRef_2_5:any;
  _NgFor_2_6:import12.NgFor;
  _text_3:any;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_MegaMenuComponent2,renderType_MegaMenuComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','menu-sub-cat');
    this._text_1 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._appEl_2 = new import2.AppElement(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import14.TemplateRef_(this._appEl_2,viewFactory_MegaMenuComponent3);
    this._NgFor_2_6 = new import12.NgFor(this._appEl_2.vcRef,this._TemplateRef_2_5,this.parent.parentInjector.get(import15.IterableDiffers),this.parent.ref);
    this._text_3 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import12.NgFor) && (2 === requestNodeIndex))) { return this._NgFor_2_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_0:any = this.parent.context.activeCategoryData.data;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgFor_2_6.ngForOf = currVal_0;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForOf'] = new import7.SimpleChange(this._expr_0,currVal_0);
      this._expr_0 = currVal_0;
    }
    if ((changes !== (null as any))) { this._NgFor_2_6.ngOnChanges(changes); }
    if (!throwOnChange) { this._NgFor_2_6.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_MegaMenuComponent2(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_MegaMenuComponent2(viewUtils,parentInjector,declarationEl);
}
class _View_MegaMenuComponent3 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _anchor_5:any;
  /*private*/ _appEl_5:import2.AppElement;
  _TemplateRef_5_5:any;
  _NgFor_5_6:import12.NgFor;
  _text_6:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_MegaMenuComponent3,renderType_MegaMenuComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'ul',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','sub-cat-list');
    this._text_1 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._el_2 = this.renderer.createElement(this._el_0,'li',(null as any));
    this.renderer.setElementAttribute(this._el_2,'class','sub-cat-list-item sub-cat-list-header');
    this._text_3 = this.renderer.createText(this._el_2,'',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._anchor_5 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._appEl_5 = new import2.AppElement(5,0,this,this._anchor_5);
    this._TemplateRef_5_5 = new import14.TemplateRef_(this._appEl_5,viewFactory_MegaMenuComponent4);
    this._NgFor_5_6 = new import12.NgFor(this._appEl_5.vcRef,this._TemplateRef_5_5,this.parent.parent.parentInjector.get(import15.IterableDiffers),this.parent.parent.ref);
    this._text_6 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._anchor_5,
      this._text_6
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.TemplateRef) && (5 === requestNodeIndex))) { return this._TemplateRef_5_5; }
    if (((token === import12.NgFor) && (5 === requestNodeIndex))) { return this._NgFor_5_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_1:any = this.context.$implicit.data;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._NgFor_5_6.ngForOf = currVal_1;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForOf'] = new import7.SimpleChange(this._expr_1,currVal_1);
      this._expr_1 = currVal_1;
    }
    if ((changes !== (null as any))) { this._NgFor_5_6.ngOnChanges(changes); }
    if (!throwOnChange) { this._NgFor_5_6.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = import4.interpolate(1,'',this.context.$implicit.name,'');
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setText(this._text_3,currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_MegaMenuComponent3(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_MegaMenuComponent3(viewUtils,parentInjector,declarationEl);
}
class _View_MegaMenuComponent4 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _RouterLinkWithHref_2_3:import19.RouterLinkWithHref;
  _text_3:any;
  _text_4:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_MegaMenuComponent4,renderType_MegaMenuComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'li',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','sub-cat-list-item');
    this._text_1 = this.renderer.createText(this._el_0,'\n          ',(null as any));
    this._el_2 = this.renderer.createElement(this._el_0,'a',(null as any));
    this._RouterLinkWithHref_2_3 = new import19.RouterLinkWithHref(this.parent.parent.parent.parentInjector.get(import20.Router),this.parent.parent.parent.parentInjector.get(import21.ActivatedRoute),this.parent.parent.parent.parentInjector.get(import22.LocationStrategy));
    this._text_3 = this.renderer.createText(this._el_2,'',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_2,'click',this.eventHandler(this._handle_click_2_0.bind(this)));
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4
    ]
    ,[disposable_0],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.RouterLinkWithHref) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._RouterLinkWithHref_2_3; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_1:any = this.parent.parent.parent.context.getRouterLink(this.context.$implicit.href)['qp'];
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._RouterLinkWithHref_2_3.queryParams = currVal_1;
      if ((changes === (null as any))) { (changes = {}); }
      changes['queryParams'] = new import7.SimpleChange(this._expr_1,currVal_1);
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = this.parent.parent.parent.context.getRouterLink(this.context.$implicit.href)['rl'];
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this._RouterLinkWithHref_2_3.routerLink = currVal_2;
      if ((changes === (null as any))) { (changes = {}); }
      changes['routerLink'] = new import7.SimpleChange(this._expr_2,currVal_2);
      this._expr_2 = currVal_2;
    }
    if ((changes !== (null as any))) { this._RouterLinkWithHref_2_3.ngOnChanges(changes); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_3:any = this._RouterLinkWithHref_2_3.href;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementProperty(this._el_2,'href',this.viewUtils.sanitizer.sanitize(import23.SecurityContext.URL,currVal_3));
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = import4.interpolate(1,'\n            ',this.context.$implicit.name,'\n          ');
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setText(this._text_3,currVal_4);
      this._expr_4 = currVal_4;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._RouterLinkWithHref_2_3.ngOnDestroy();
  }
  private _handle_click_2_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._RouterLinkWithHref_2_3.onClick($event.button,$event.ctrlKey,$event.metaKey)) !== false);
    return (true && pd_0);
  }
}
function viewFactory_MegaMenuComponent4(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_MegaMenuComponent4(viewUtils,parentInjector,declarationEl);
}