/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from '../../../app/swiper_module/swiper.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/element_ref';
import * as import9 from '@angular/core/src/zone/ng_zone';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
var renderType_SwiperComponent_Host:import0.RenderComponentType = (null as any);
class _View_SwiperComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _SwiperComponent_0_4:import3.SwiperComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_SwiperComponent_Host0,renderType_SwiperComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('swiper',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_SwiperComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._SwiperComponent_0_4 = new import3.SwiperComponent(new import8.ElementRef(this._el_0),this.parentInjector.get(import9.NgZone));
    this._appEl_0.initComponent(this._SwiperComponent_0_4,[],compView_0);
    compView_0.create(this._SwiperComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.SwiperComponent) && (0 === requestNodeIndex))) { return this._SwiperComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) {
      if ((this.numberOfChecks === 0)) { this._SwiperComponent_0_4.ngAfterViewInit(); }
      this._SwiperComponent_0_4.ngAfterViewChecked();
    }
  }
}
function viewFactory_SwiperComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_SwiperComponent_Host === (null as any))) { (renderType_SwiperComponent_Host = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,[],{})); }
  return new _View_SwiperComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const SwiperComponentNgFactory:import11.ComponentFactory<import3.SwiperComponent> = new import11.ComponentFactory<import3.SwiperComponent>('swiper',viewFactory_SwiperComponent_Host0,import3.SwiperComponent);
const styles_SwiperComponent:any[] = [
  '[_nghost-%COMP%] {display: block;}',
  '.swiper-container[_ngcontent-%COMP%] {width: auto;height: auto;}'
]
;
var renderType_SwiperComponent:import0.RenderComponentType = (null as any);
class _View_SwiperComponent0 extends import1.AppView<import3.SwiperComponent> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_SwiperComponent0,renderType_SwiperComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','swiper-container');
    this._text_1 = this.renderer.createText(this._el_0,'\n                    ',(null as any));
    this.renderer.projectNodes(this._el_0,import4.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._text_2 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this.init([],[
      this._el_0,
      this._text_1,
      this._text_2
    ]
    ,[],[]);
    return (null as any);
  }
}
export function viewFactory_SwiperComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.SwiperComponent> {
  if ((renderType_SwiperComponent === (null as any))) { (renderType_SwiperComponent = viewUtils.createRenderComponentType('/home/craftsvilla/angular2-aot-webpack2-rollup/app/swiper_module/swiper.component.ts class SwiperComponent - inline template',1,import10.ViewEncapsulation.Emulated,styles_SwiperComponent,{})); }
  return new _View_SwiperComponent0(viewUtils,parentInjector,declarationEl);
}